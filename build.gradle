import java.text.SimpleDateFormat

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

repositories {
    mavenCentral()
    maven {
        url = 'https://maven.pkg.github.com/ipregistry/ipregistry-ineter'
        credentials {
            username System.getenv("GH_PACKAGES_USER")
            password System.getenv("GH_PACKAGES_READ_TOKEN")
        }
    }
}

group = 'co.ipregistry'
version = '2.0.0'

java {
    withJavadocJar()
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

dependencies {
    implementation 'com.google.guava:guava:33.2.1-jre'
    implementation 'co.ipregistry:ipregistry-ineter:3.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.0'
}

jar {
    manifest {
        attributes(
                'Built-By': System.properties['user.name'],
                'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",
                'Created-By': 'Gradle ${gradle.gradleVersion}',
                'Name': 'co/ipregistry/rdns',
                'Specification-Title': 'Ipregistry rDNS library',
                'Specification-Version': project.version,
                'Specification-Vendor': 'Ipregistry',
                'Implementation-Title': 'co.ipregistry.rdns',
                'Implementation-Version': project.version,
                'Implementation-Vendor': 'Ipregistry',
        )
    }
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ipregistry/ipregistry-rdns")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GH_PACKAGES_USER")
                password = project.findProperty("gpr.key") ?: System.getenv("GH_PACKAGES_WRITE_TOKEN")
            }
        }
    }
    publications {
        github(org.gradle.api.publish.maven.MavenPublication) {
            groupId = 'co.ipregistry'
            artifactId = 'ipregistry-rdns'
            version = project.version

            from(components.java)
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
